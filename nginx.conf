server {
    listen 80;
    server_name localhost;

    # Configuration des logs
    error_log /dev/stderr debug;
    access_log /dev/stdout combined;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;

        # Configuration CORS pour le frontend
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Auth-Token' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # Configuration pour l'API football-data.org
    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass ${VITE_APP_API_ENDPOINT_URL};
        
        # Headers d'authentification et de proxy
        proxy_set_header X-Auth-Token ${VITE_APP_FOOTBALL_API_KEY};
        proxy_set_header Host api.football-data.org;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Désactive les headers CORS du serveur distant
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;
        
        # Ajoute les headers CORS à la réponse
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Auth-Token' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Gestion des requêtes OPTIONS pour le CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Auth-Token';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Configuration SSL
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Désactiver le cache pour les requêtes API
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Désactiver le cache côté proxy
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Gestion des erreurs
        proxy_intercept_errors on;
        error_page 400 401 403 404 500 502 503 504 /50x.html;
        
        # Logs spécifiques pour l'API
        access_log /dev/stdout combined;
        error_log /dev/stderr debug;
    }

    # Configuration pour les métriques Prometheus
    location /metrics {
        stub_status on;
        access_log off;
        allow 172.16.0.0/12;  # Docker network
        deny all;
    }

    # Configuration pour l'exporteur Prometheus
    location /status {
        stub_status;
        allow 127.0.0.1;
        allow 172.16.0.0/12; # réseau Docker
        deny all;
    }

    # Page d'erreur
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 